modbus:
  - id: ${bms_name}_modbus_${bms_suffix}
    uart_id: ${bms_uart_id}
    send_wait_time: ${bms_modbus_send_wait_time}
  
modbus_controller:
  - id: ${bms_name}_modbus_controller_${bms_suffix}
    address: ${bms_modbus_address}
    modbus_id: ${bms_name}_modbus_${bms_suffix}
    command_throttle: ${bms_modbus_throttle}
    setup_priority: -10
    update_interval: ${bms_update_interval}

    
binary_sensor:
  #  11  Status/Fault flag                     2 byte   R  uint16  Hex See ^3
  #      Bit 8: Status: Charging enabled/disabled
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_${bms_suffix}
    address: 11
    register_type: holding
    bitmask: 0x0080

  #      Bit 9: Status: Discharging enabled/disabled
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_${bms_suffix}
    address: 11
    register_type: holding
    bitmask: 0x0100    

sensor:
  #   0  Current                               2 byte   R   int16  10mA (Positive: chargingm Negative: discharging)
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_current_${bms_suffix}
    address: 0
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: 'A'
    device_class: current
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  #   1  Voltage of pack                       2 byte   R  uint16  10mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_total voltage_${bms_suffix}
    address: 1
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_power_${bms_suffix}
    address: 0
    register_type: holding
    value_type: U_WORD
    register_count: 2
    response_size: 4
    unit_of_measurement: 'W'
    device_class: power
    state_class: measurement
    accuracy_decimals: 2
    lambda: |-
      if (data.size() < 4) {
        return NAN;
      }
      float current = (int16_t)(data[0] << 8 | data[1] << 0);
      float total_voltage = (uint16_t)(data[2] << 8 | data[3] << 0);
      return current * total_voltage * 0.0001f;

  #   2  State of charge                       2 byte   R   uint8  % (0-100%)
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_soc_${bms_suffix}
    address: 2
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: '%'
    device_class: battery
    state_class: measurement
    accuracy_decimals: 0

  #   3  SOH                                   2 byte   R   uint8  % (0-100%)
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_soh_${bms_suffix}
    address: 3
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: '%'
    state_class: measurement
    accuracy_decimals: 0

  #   4  Remain capacity                       2 byte   R  uint16  10mAH
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_remaining_capacity_${bms_suffix}
    address: 4
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'Ah'
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  #   5  Full capacity                         2 byte   R  uint16  10mAH
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_full_capacity_${bms_suffix}
    address: 5
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'Ah'
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  #   6  Design capacity                       2 byte   R  uint16  10mAH
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_design_capacity_${bms_suffix}
    address: 6
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'Ah'
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01

  #   7  Charging cycles count                 2 byte   R  uint16  Cyc.
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_cycles_${bms_suffix}
    address: 7
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #   8  Reserved

  #   9  Warning flag                          2 byte   R  uint16  Hex See ^1
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_warnings_bitmask_${bms_suffix}
    address: 9
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #  10  Protection flag                       2 byte   R  uint16  Hex See ^2
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_protections bitmask_${bms_suffix}
    address: 10
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #  11  Status/Fault flag                     2 byte   R  uint16  Hex See ^3
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_errors_bitmask_${bms_suffix}
    address: 11
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #  12  Balance status                        2 byte   R  uint16  Hex
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_balancer_status_${bms_suffix}
    address: 12
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  #  13  Reserved
  #  14  Reserved

  #  15  Cell voltage 1                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_1_${bms_suffix}
    address: 15
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  16  Cell voltage 2                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_2_${bms_suffix}
    address: 16
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  17  Cell voltage 3                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_3_${bms_suffix}
    address: 17
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  18  Cell voltage 4                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_4_${bms_suffix}
    address: 18
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  19  Cell voltage 5                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_5_${bms_suffix}
    address: 19
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  20  Cell voltage 6                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_6_${bms_suffix}
    address: 20
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  21  Cell voltage 7                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_7_${bms_suffix}
    address: 21
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  22  Cell voltage 8                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_8_${bms_suffix}
    address: 22
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  23  Cell voltage 9                        2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_9_${bms_suffix}
    address: 23
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  24  Cell voltage 10                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_10_${bms_suffix}
    address: 24
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  25  Cell voltage 11                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_11_${bms_suffix}
    address: 25
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  26  Cell voltage 12                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_12_${bms_suffix}
    address: 26
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  27  Cell voltage 13                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_13_${bms_suffix}
    address: 27
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  28  Cell voltage 14                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_14_${bms_suffix}
    address: 28
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  29  Cell voltage 15                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_15_${bms_suffix}
    address: 29
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  #  30  Cell voltage 16                       2 byte   R  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_voltage_16_${bms_suffix}
    address: 30
    register_type: holding
    value_type: U_WORD
    unit_of_measurement: 'V'
    state_class: measurement
    accuracy_decimals: 3
    filters:
      - multiply: 0.001

  ### Calculated sensors

  # Delta cell voltage
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_delta_cell_voltage_${bms_suffix}
    address: 15
    register_type: holding
    value_type: U_WORD
    register_count: 16
    response_size: 32
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3
    lambda: |-
      uint8_t cells = 16;
      if (data.size() < cells * 2) {
        return NAN;
      }

      float min_cell_voltage = 100.0f;
      float max_cell_voltage = -100.0f;
      float average_cell_voltage = 0.0f;
      uint8_t min_voltage_cell = 0;
      uint8_t max_voltage_cell = 0;
      for (uint8_t i = 0; i < cells; i++) {
        float cell_voltage = (uint16_t)(data[item->offset + (i * 2)] << 8 | data[item->offset + (i * 2) + 1] << 0) * 0.001f;
        average_cell_voltage = average_cell_voltage + cell_voltage;
        if (cell_voltage < min_cell_voltage) {
            min_cell_voltage = cell_voltage;
            min_voltage_cell = i + 1;
        }
        if (cell_voltage > max_cell_voltage) {
          max_cell_voltage = cell_voltage;
          max_voltage_cell = i + 1;
        }
      }
      average_cell_voltage = average_cell_voltage / cells;

      id(${bms_name}_average_cell_voltage).publish_state(average_cell_voltage);
      id(${bms_name}_min_cell_voltage).publish_state(min_cell_voltage);
      id(${bms_name}_max_cell_voltage).publish_state(max_cell_voltage);
      id(${bms_name}_min_voltage_cell).publish_state(min_voltage_cell);
      id(${bms_name}_max_voltage_cell).publish_state(max_voltage_cell);

      return max_cell_voltage - min_cell_voltage;

  - platform: template
    id: ${bms_name}_average_cell_voltage
    name: ${name}_${bms_name}_average_cell_voltage_${bms_suffix}
    update_interval: never
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  - platform: template
    id: ${bms_name}_min_cell_voltage
    name: ${name}_${bms_name}_min_cell_voltage_${bms_suffix}
    update_interval: never
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  - platform: template
    id: ${bms_name}_max_cell_voltage
    name: ${name}_${bms_name}_max_cell_voltage_${bms_suffix}
    update_interval: never
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 3

  - platform: template
    id: ${bms_name}_min_voltage_cell
    name: ${name}_${bms_name}_min_voltage_cell_${bms_suffix}
    update_interval: never
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  - platform: template
    id: ${bms_name}_max_voltage_cell
    name: ${name}_${bms_name}_max_voltage_cell_${bms_suffix}
    update_interval: never
    unit_of_measurement: ""
    state_class: measurement
    accuracy_decimals: 0

  ####

  #  31  Battery temperature 1                 2 byte   R   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_battery_temperature_1_${bms_suffix}
    address: 31
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  32  Battery temperature 2                 2 byte   R   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_battery_temperature_2_${bms_suffix}
    address: 32
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  33  Battery temperature 3                 2 byte   R   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_battery_temperature_3_${bms_suffix}
    address: 33
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  34  Battery temperature 4                 2 byte   R   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_battery_temperature_4_${bms_suffix}
    address: 34
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  35  MOSFET temperature                    2 byte   R   int16  0.1 ℃ or invalid
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_mosfet_temperature_${bms_suffix}
    address: 35
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  36  Environment temperature               2 byte   R   int16  0.1 ℃ or invalid
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_temperature_${bms_suffix}
    address: 36
    register_type: holding
    value_type: S_WORD
    unit_of_measurement: '˚C'
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1

  #  37-59  Reserved

number:
  #  60  Pack OV alarm                         2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_overvoltage_alarm_${bms_suffix}
    use_write_multiple: true
    address: 60
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  61  Pack OV protection                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_overvoltage_protection_${bms_suffix}
    use_write_multiple: true
    address: 61
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  62  Pack OV release protection            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_overvoltage_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 62
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  63  Pack OV protection delay time         2 byte  RW  uint8   0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_overvoltage_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 63
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  64  Cell OV alarm                         2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_overvoltage_alarm_${bms_suffix}
    use_write_multiple: true
    address: 64
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  65  Cell OV protection                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_overvoltage_protection_${bms_suffix}
    use_write_multiple: true
    address: 65
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  66  Cell OV release protection            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_overvoltage_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 66
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  67  Cell OV protection delay time         2 byte  RW   uint8  0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_overvoltage_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 67
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  68  Pack UV alarm                         2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_undervoltage_alarm_${bms_suffix}
    use_write_multiple: true
    address: 68
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  69  Pack UV protection                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_undervoltage_protection_${bms_suffix}
    use_write_multiple: true
    address: 69
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  70  Pack UV release protection            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_undervoltage_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 70
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  71  Pack UV protection delay time         2 byte  RW   uint8  0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_undervoltage_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 71
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  72  Cell UV alarm                         2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_undervoltage_alarm_${bms_suffix}
    use_write_multiple: true
    address: 72
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  73  Cell UV protection                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_undervoltage_protection_${bms_suffix}
    use_write_multiple: true
    address: 73
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  74  Cell UV release protection            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_undervoltage_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 74
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  #  75  Cell UV protection delay time         2 byte  RW   uint8  0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_undervoltage_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 75
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  76  Charging OC alarm                     2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overcurrent_alarm_${bms_suffix}
    use_write_multiple: true
    address: 76
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  #  77  Charging OC protection                2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overcurrent_protection_${bms_suffix}
    use_write_multiple: true
    address: 77
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  #  78  Charging OC protection delay time     2 byte  RW   uint8  0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overcurrent_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 78
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  79  Discharging OC alarm                  2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overcurrent_alarm_${bms_suffix}
    use_write_multiple: true
    address: 79
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  #  80  Discharging OC protection             2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overcurrent_protection_${bms_suffix}
    use_write_multiple: true
    address: 80
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  #  81  Discharging OC protection delay time  2 byte  RW   uint8  0.1S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overcurrent_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 81
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  82  Discharging OC-2 protection             2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overcurrent_2_protection_${bms_suffix}
    use_write_multiple: true
    address: 82
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  #  83  Discharging OC-2 protection delay time  2 byte  RW   uint8  0.025S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overcurrent_2 protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 83
    register_type: holding
    value_type: U_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: 0.1
    max_value: 25.5
    step: 0.1
    mode: box
    unit_of_measurement: 's'

  #  84  Charging OT alarm                     2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overtemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 84
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  85  Charging OT protection                2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overtemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 85
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  86  Charging OT release protection        2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overtemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 86
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  87  Discharging OT alarm                  2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overtemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 87
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  88  Discharging OT protection             2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overtemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 88
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  89  Discharging OT release                2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_overtemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 89
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  90  Charging UT alarm                     2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_undertemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 90
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  91  Charging UT protection                2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_undertemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 91
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  92  Charging UT release protection        2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_undertemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 92
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  93  Discharging UT alarm                  2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_undertemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 93
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  94  Discharging UT protection             2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_undertemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 94
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  95  Discharging UT release protection     2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_discharging_undertemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 95
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  96  MOSFET OT alarm                       2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_mosfet_overtemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 96
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  97  MOSFET OT protection                  2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_mosfet_overtemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 97
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  98  MOSFET OT release protection          2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_mosfet_overtemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 98
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  #  99  Environment OT alarm                  2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_overtemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 99
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 100  Environment OT protection             2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_overtemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 100
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 101  Environment OT release protection     2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_overtemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 101
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 102  Environment UT alarm                  2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_undertemperature_alarm_${bms_suffix}
    use_write_multiple: true
    address: 102
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 103  Environment UT protection             2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_undertemperature_protection_${bms_suffix}
    use_write_multiple: true
    address: 103
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 104  Environment UT release protection     2 byte  RW   int16  0.1 ℃
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_environment_undertemperature_protection_release_${bms_suffix}
    use_write_multiple: true
    address: 104
    register_type: holding
    value_type: S_WORD
    lambda: "return  x * 0.1f; "
    write_lambda: "return x * 10.0f;"
    min_value: -200.0
    max_value: 200.0
    step: 0.1
    mode: box
    unit_of_measurement: '°C'

  # 105  Balance start cell voltage            2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_balance_start_cell_voltage_${bms_suffix}
    use_write_multiple: true
    address: 105
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  # 106  Balance start delta voltage           2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_balance_start_delta_voltage_${bms_suffix}
    use_write_multiple: true
    address: 106
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  # 107  Pack full-charge voltage              2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_full_charge_voltage_${bms_suffix}
    use_write_multiple: true
    address: 107
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  # 108  Pack full-charge current              2 byte  RW  uint16  mA
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_pack_full_charge_current_${bms_suffix}
    use_write_multiple: true
    address: 108
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mA'

  # 109  Cell sleep voltage                    2 byte  RW  uint16  mV
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_sleep_voltage_${bms_suffix}
    use_write_multiple: true
    address: 109
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'mV'

  # 110  Cell sleep delay time                 2 byte  RW  uint16  min
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_cell_sleep_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 110
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'min'

  # 111  Short circuit protect delay time      2 byte  RW   uint8  25uS Max 500uS
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_short_circuit_protect_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 111
    register_type: holding
    value_type: U_WORD
    lambda: "return x * 25.0f; "
    write_lambda: "return x * 0.04f;"
    min_value: 25.0
    max_value: 500.0
    step: 25.0
    mode: box
    unit_of_measurement: "us"

  # 112  SOC alarm threshold                   2 byte  RW   uint8  % 0~100%
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_soc_alarm_threshold_${bms_suffix}
    use_write_multiple: true
    address: 112
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 100.0
    step: 1
    mode: box
    unit_of_measurement: '%'

  # 113  Charging OC-2 protection              2 byte  RW  uint16  A
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overcurrent_2_protection_${bms_suffix}
    use_write_multiple: true
    address: 113
    register_type: holding
    value_type: U_WORD
    min_value: 0.0
    max_value: 65535.0
    step: 1
    mode: box
    unit_of_measurement: 'A'

  # 114  Charging OC-2 protection delay time   2 byte  RW   uint8  0.025S 1~255
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_charging_overcurrent_2_protection_delay_time_${bms_suffix}
    use_write_multiple: true
    address: 114
    register_type: holding
    value_type: U_WORD
    lambda: "return x * 25.0f; "
    write_lambda: "return x * 0.04f;"
    min_value: 25.0
    max_value: 6375.0
    step: 25.0
    mode: box
    unit_of_measurement: 'ms'

text_sensor:
  #   9  Warning flag                          2 byte   R  uint16  Hex See ^1
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_warnings_${bms_suffix}
    address: 9
    register_type: holding
    register_count: 1
    response_size: 2
    raw_encode: HEXBYTES
    lambda: |-
      static const uint8_t WARNINGS_SIZE = 16;
      static const char *const WARNINGS[WARNINGS_SIZE] = {
          "Cell overvoltage",              // 0000 0000 0000 0001 (1)
          "Cell undervoltage",             // 0000 0000 0000 0010 (2)
          "Pack overvoltage",              // 0000 0000 0000 0100 (3)
          "Pack undervoltage",             // 0000 0000 0000 1000 (4)
          "Charging overcurrent",          // 0000 0000 0001 0000 (5)
          "Discharging overcurrent",       // 0000 0000 0010 0000 (6)
          "Reserve (Bit 7)",               // 0000 0000 0100 0000 (7)
          "Reserve (Bit 8)",               // 0000 0000 1000 0000 (8)
          "Charging overtemperature",      // 0000 0001 0000 0000 (9)
          "Discharging overtemperature",   // 0000 0010 0000 0000 (10)
          "Charging undertemperature",     // 0000 0100 0000 0000 (11)
          "Discharging undertemperature",  // 0000 1000 0000 0000 (12)
          "Environment overtemperature",   // 0001 0000 0000 0000 (13)
          "Environment undertemperature",  // 0010 0000 0000 0000 (14)
          "MOSFET overtemperature",        // 0100 0000 0000 0000 (15)
          "Low state of charge",           // 1000 0000 0000 0000 (16)
      };
      std::string values = "";

      uint16_t mask = modbus_controller::word_from_hex_str(x, 0);
      if (mask) {
        for (int i = 0; i < WARNINGS_SIZE; i++) {
          if (mask & (1 << i)) {
            values.append(WARNINGS[i]);
            values.append(";");
          }
        }
        if (!values.empty()) {
          values.pop_back();
        }
      }
      return values;

  #  10  Protection flag                       2 byte   R  uint16  Hex See ^2
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_protections_${bms_suffix}
    address: 10
    register_type: holding
    register_count: 1
    response_size: 2
    raw_encode: HEXBYTES
    lambda: |-
      static const uint8_t PROTECTIONS_SIZE = 16;
      static const char *const PROTECTIONS[PROTECTIONS_SIZE] = {
          "Cell overvoltage",              // 0000 0000 0000 0001 (1)
          "Cell undervoltage",             // 0000 0000 0000 0010 (2)
          "Pack overvoltage",              // 0000 0000 0000 0100 (3)
          "Pack undervoltage",             // 0000 0000 0000 1000 (4)
          "Charging overcurrent",          // 0000 0000 0001 0000 (5)
          "Discharging overcurrent",       // 0000 0000 0010 0000 (6)
          "Short circuit",                 // 0000 0000 0100 0000 (7)
          "Charging overvoltage",          // 0000 0000 1000 0000 (8)
          "Charging overtemperature",      // 0000 0001 0000 0000 (9)
          "Discharging overtemperature",   // 0000 0010 0000 0000 (10)
          "Charging undertemperature",     // 0000 0100 0000 0000 (11)
          "Discharging undertemperature",  // 0000 1000 0000 0000 (12)
          "MOSFET overtemperature",        // 0001 0000 0000 0000 (13)
          "Environment overtemperature",   // 0010 0000 0000 0000 (14)
          "Environment undertemperature",  // 0100 0000 0000 0000 (15)
          "Reserve (Bit 16)",              // 1000 0000 0000 0000 (16)
      };
      std::string values = "";

      uint16_t mask = modbus_controller::word_from_hex_str(x, 0);
      if (mask) {
        for (int i = 0; i < PROTECTIONS_SIZE; i++) {
          if (mask & (1 << i)) {
            values.append(PROTECTIONS[i]);
            values.append(";");
          }
        }
        if (!values.empty()) {
          values.pop_back();
        }
      }
      return values;

  #  11  Status/Fault flag                     2 byte   R  uint16  Hex See ^3
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_errors_${bms_suffix}
    address: 11
    register_type: holding
    register_count: 1
    response_size: 2
    raw_encode: HEXBYTES
    lambda: |-
      static const uint8_t FAULTS_SIZE = 8;
      static const char *const FAULTS[FAULTS_SIZE] = {
          "Charging MOSFET fault",                   // 0000 0000 0000 0001 (1)
          "Discharging MOSFET fault",                // 0000 0000 0000 0010 (2)
          "Temperature sensor",                      // 0000 0000 0000 0100 (3)
          "Reserve (Bit 4)",                         // 0000 0000 0000 1000 (4)
          "Battery cell fault",                      // 0000 0000 0001 0000 (5)
          "Front end sampling communication fault",  // 0000 0000 0010 0000 (6)
          "Reserve (Bit 7)",                         // 0000 0000 0100 0000 (7)
          "Reserve (Bit 8)",                         // 0000 0000 1000 0000 (8)
      };
      std::string values = "";

      uint16_t mask = modbus_controller::word_from_hex_str(x, 0);
      if (mask) {
        for (int i = 0; i < FAULTS_SIZE; i++) {
          if (mask & (1 << i)) {
            values.append(FAULTS[i]);
            values.append(";");
          }
        }
        if (!values.empty()) {
          values.pop_back();
        }
      }
      return values;

  # 150  Version information                  20 byte   R  uint16  ASCII
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_version_information_${bms_suffix}
    skip_updates: 60
    address: 150
    register_type: holding
    register_count: 10
    response_size: 20

  # 160  Model SN                             20 byte  RW  uint16  ASCII BMS Manufacturer
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_bms_serial_number_${bms_suffix}
    skip_updates: 60
    address: 160
    register_type: holding
    register_count: 10
    response_size: 20

  # 170  PACK SN                              20 byte  RW  uint16  ASCII PACK Manufacturer
  - platform: modbus_controller
    modbus_controller_id: ${bms_name}_modbus_controller_${bms_suffix}
    name: ${name}_${bms_name}_battery_pack_serial_number_${bms_suffix}
    skip_updates: 60
    address: 170
    register_type: holding
    register_count: 10
    response_size: 20