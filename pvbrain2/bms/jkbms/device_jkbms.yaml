external_components:
  - source: github://syssi/esphome-jk-bms@main
    refresh: 0s
    
jk_modbus:
  - id: ${bms_name}_modbus_${bms_suffix}
    uart_id: ${bms_uart_id}
jk_bms:
  - id: ${bms_name}_bms_${bms_suffix}
    jk_modbus_id: ${bms_name}_modbus_${bms_suffix}
    
globals:    
  - id: ${bms_name}_battery_charging_energy_yesteday_global_${bms_suffix}
    type: float
    restore_value: yes
    
  - id: ${bms_name}_battery_discharging_energy_yesteday_global_${bms_suffix}
    type: float
    restore_value: yes

time:
  platform: homeassistant #sntp
  id: my_time
  
  on_time:
    - seconds: 59
      minutes: 59
      hours: 23
      then:  
        - globals.set:
                id: ${bms_name}_battery_charging_energy_yesteday_global_${bms_suffix}
                value: !lambda return ( id(${bms_name}_battery_charging_energy_yesteday_global_${bms_suffix}) =  float( id(${bms_name}_battery_charging_energy_day_${bms_suffix}).state) ); 
                
        - globals.set:
                id: ${bms_name}_battery_discharging_energy_yesteday_global_${bms_suffix}
                value: !lambda return ( id(${bms_name}_battery_discharging_energy_yesteday_global_${bms_suffix}) =  float( id(${bms_name}_battery_discharging_energy_day_${bms_suffix}).state) );     
switch:
  - platform: jk_bms
    jk_bms_id: ${bms_name}_bms_${bms_suffix}
    charging:
      name: ${name}_${bms_name}_charging_${bms_suffix}
      id: ${bms_name}_charging_${bms_suffix}
    discharging:
      name: ${name}_${bms_name}_discharging_${bms_suffix}
      id: ${bms_name}_discharging_${bms_suffix}
      
sensor:

  - platform: jk_bms
    jk_bms_id: ${bms_name}_bms_${bms_suffix}
    min_cell_voltage:
      name: ${name}_${bms_name}_min_cell_voltage_${bms_suffix}
    max_cell_voltage:
      name: ${name}_${bms_name}_max_cell_voltage_${bms_suffix}
    min_voltage_cell:
      name: ${name}_${bms_name}_min_voltage_cell_${bms_suffix}
    max_voltage_cell:
      name: ${name}_${bms_name}_max_voltage_cell_${bms_suffix}
    delta_cell_voltage:
      name: ${name}_${bms_name}_delta_cell_voltage_${bms_suffix}
    average_cell_voltage:
      name: ${name}_${bms_name}_average_cell_voltage_${bms_suffix}
    cell_voltage_1:
      name: ${name}_${bms_name}_cell_voltage_1_${bms_suffix}
    cell_voltage_2:
      name: ${name}_${bms_name}_cell_voltage_2_${bms_suffix}
    cell_voltage_3:
      name: ${name}_${bms_name}_cell_voltage_3_${bms_suffix}
    cell_voltage_4:
      name: ${name}_${bms_name}_cell_voltage_4_${bms_suffix}
    cell_voltage_5:
      name: ${name}_${bms_name}_cell_voltage_5_${bms_suffix}
    cell_voltage_6:
      name: ${name}_${bms_name}_cell_voltage_6_${bms_suffix}
    cell_voltage_7:
      name: ${name}_${bms_name}_cell_voltage_7_${bms_suffix}
    cell_voltage_8:
      name: ${name}_${bms_name}_cell_voltage_8_${bms_suffix}
    cell_voltage_9:
      name: ${name}_${bms_name}_cell_voltage_9_${bms_suffix}
    cell_voltage_10:
      name: ${name}_${bms_name}_cell_voltage_10_${bms_suffix}
    cell_voltage_11:
      name: ${name}_${bms_name}_cell_voltage_11_${bms_suffix}
    cell_voltage_12:
      name: ${name}_${bms_name}_cell_voltage_12_${bms_suffix}
    cell_voltage_13:
      name: ${name}_${bms_name}_cell_voltage_13_${bms_suffix}
    cell_voltage_14:
      name: ${name}_${bms_name}_cell_voltage_14_${bms_suffix}
    cell_voltage_15:
      name: ${name}_${bms_name}_cell_voltage_15_${bms_suffix}
    cell_voltage_16:
      name: ${name}_${bms_name}_cell_voltage_16_${bms_suffix}
    charging_power:
      name: ${name}_${bms_name}_battery_charging_power_${bms_suffix}
      id: ${bms_name}_battery_charging_power_${bms_suffix}
    discharging_power:
      name: ${name}_${bms_name}_battery_discharging_power_${bms_suffix}
      id: ${bms_name}_battery_discharging_power_${bms_suffix}
    # current_calibration:
    #   name: ${name}_${bms}_current_calibration_${bms_suffix}
    power_tube_temperature:
      name: ${name}_${bms_name}_power_tube_temperature_${bms_suffix}
    temperature_sensor_1:
      name: ${name}_${bms_name}_temperature_sensor_1_${bms_suffix}
    temperature_sensor_2:
      name: ${name}_${bms_name}_temperature_sensor_2_${bms_suffix}
    total_voltage:
      name: ${name}_${bms_name}_total_voltage_${bms_suffix}
      id: ${name}_${bms_name}_total_voltage_${bms_suffix}
    power:
      name: ${name}_${bms_name}_power_${bms_sufix} 
         
    current:
      name: ${name}_${bms_name}_current_${bms_suffix}
      id: ${bms_name}_current_${bms_suffix}
#      filters:
#        - multiply: -1
    capacity_remaining:
      name: ${name}_${bms_name}_capacity_remaining_${bms_suffix}
      id: ${bms_name}_capacity_remaining_${bms_suffix}
    charging_cycles:
      name: ${name}_${bms_name}_charging_cycles_${bms_suffix}
#    total_charging_cycle_capacity:
#      name: ${name}_${bms_name}_total_charging_cycle_capacity_${bms_suffix}
    cell_voltage_overvoltage_protection:
      name: ${name}_${bms_name}_voltage_overvoltage_protection_${bms_suffix}
    cell_voltage_overvoltage_recovery:
      name: ${name}_${bms_name}_voltage_overvoltage_recovery_${bms_suffix}
    # cell_voltage_overvoltage_delay:
      # name: ${name}_${bms_name}_voltage_overvoltage_delay_${bms_suffix}
    cell_voltage_undervoltage_protection:
      name: ${name}_${bms_name}_voltage_undervoltage_protection_${bms_suffix}
    cell_voltage_undervoltage_recovery:
      name: ${name}_${bms_name}_voltage_undervoltage_recovery_${bms_suffix}
    # cell_voltage_undervoltage_delay:
      # name: ${name}_${bms_name}_voltage_undervoltage_delay_${bms_suffix}
    total_battery_capacity_setting:
      name: ${name}_${bms_name}_total_battery_capacity_setting_${bms_suffix}
      id: ${bms_name}_total_battery_capacity_setting_${bms_suffix}
    errors_bitmask:
      name: ${name}_${bms_name}_errors_bitmask_${bms_suffix}
    # operation_mode_bitmask:
      # name: ${name}_${bms_name}_operation_mode_bitmask_${bms_suffix}
    # battery_strings:
      # name: ${name}_${bms_name}_battery_strings_${bms_suffix}_${bms_suffix}
  
  - platform: template
    name: ${name}_${bms_name}_battery_charging_current_${bms_suffix}
    id: ${bms_name}_battery_charging_current_${bms_suffix}
    unit_of_measurement: "A"
    accuracy_decimals: 1
    update_interval: ${bms_template_update}
    icon: mdi:current-dc 
    lambda: |-
      if (float(id(${bms_name}_current_${bms_suffix}).state)> 0){
        return ( (id(${bms_name}_current_${bms_suffix}).state) );   
      }
      else {
        return 0.0;
      }  
  
  # - platform: template
    # name: ${name}_${bms_name}_battery_charging_power_${bms_suffix}
    # id: ${bms_name}_battery_charging_power_${bms_suffix}
    # unit_of_measurement: "W"
    # accuracy_decimals: 1
    # update_interval: ${bms_template_update}
    # icon: mdi:power  
    # lambda: |-
      # if (float(id(${bms_name}_current_${bms_suffix}).state)> 0){
        # return ( (id(${bms_name}_total_voltage_${bms_suffix}).state) * (id(${bms_name}_current_${bms_suffix}).state) );   
      # }
      # else {
        # return 0.0;
      # }
  - platform: total_daily_energy
    name: ${bms_name}_battery_charging_energy_day_${bms_suffix}
    power_id: ${bms_name}_battery_charging_power_${bms_suffix}
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    id: ${bms_name}_battery_charging_energy_day_${bms_suffix}
    method: trapezoid
    filters:
       # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
    icon: mdi:counter
    
  - platform: template
    name: ${name}_${bms_name}_battery_charging_energy_yesteday_${bms_suffix}
    id: template_${bms_name}_battery_charging_energy_yesteday_${bms_suffix}
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    icon: mdi:power
    update_interval: ${bms_template_update}
    lambda: |-
      return ( id(template_${bms_name}_battery_charging_energy_yesteday_${bms_suffix}).state = id(${bms_name}_battery_charging_energy_yesteday_global_${bms_suffix}) );    

  - platform: template
    name: ${name}_${bms_name}_battery_discharging_current_${bms_suffix}
    id: ${bms_name}_battery_discharging_current_${bms_suffix}
    unit_of_measurement: "A"
    accuracy_decimals: 1
    update_interval: ${bms_template_update}
    icon: mdi:current-dc 
    lambda: |-
      if (float(id(${bms_name}_current_${bms_suffix}).state)< 0){
        return ( (id(${bms_name}_current_${bms_suffix}).state) );   
      }
      else {
        return 0.0;
      }    
    
  # - platform: template
    # name: ${name}_${bms_name}_battery_discharging_power_${bms_suffix}
    # id: ${bms_name}_battery_discharging_power_${bms_suffix}
    # unit_of_measurement: "W"
    # accuracy_decimals: 1
    # update_interval: ${bms_template_update}
    # icon: mdi:power  
    # lambda: |-
      # if (float(id(${bms_name}_current_${bms_suffix}).state) < 0){
        # return ( -(id(${bms_name}_total_voltage_${bms_suffix}).state) * (id(${bms_name}_current_${bms_suffix}).state) );   
      # }
      # else {
        # return 0.0;
      # }
      
  - platform: total_daily_energy
    name: ${name}_${bms_name}_battery_discharging_energy_day_${bms_suffix}
    power_id: ${bms_name}_battery_discharging_power_${bms_suffix}
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    id: ${bms_name}_battery_discharging_energy_day_${bms_suffix}
    method: trapezoid
    filters:
       # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
    icon: mdi:counter
    
  - platform: template
    name: ${name}_${bms_name}_battery_discharging_energy_yesteday_${bms_suffix}
    id: template_${bms_name}_battery_discharging_energy_yesteday_${bms_suffix}
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    icon: mdi:power
    update_interval: ${bms_template_update}
    lambda: |-
      return ( id(template_${bms_name}_battery_discharging_energy_yesteday_${bms_suffix}).state = id(${bms_name}_battery_discharging_energy_yesteday_global_${bms_suffix}) );

  - platform: template
    name: ${name}_${bms_name}_c_values_${bms_suffix}
    id: ${name}_${bms_name}_c_values_${bms_suffix}
    unit_of_measurement: "c"
    accuracy_decimals: 3
    update_interval: ${bms_template_update}
    icon: mdi:current-dc
    lambda: |-
        return ( fabs(float(id(${bms_name}_current_${bms_suffix}).state)) / float(id(${bms_name}_total_battery_capacity_setting_${bms_suffix}).state) ); 
        
text_sensor:
    
  - platform: template
    name: ${name}_${bms_name}_remaining_time_${bms_suffix}
    lambda: |-
      if(id(${bms_name}_current_${bms_suffix}).state<0) {
        int seconds = int(id(${bms_name}_capacity_remaining_${bms_suffix}).state*0.01*id(${bms_name}_total_battery_capacity_setting_${bms_suffix}).state/(-id(${bms_name}_current_${bms_suffix}).state)*(3600));
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600); 
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return { ("Discharging time to go: " + std::to_string(days) +"d " + std::to_string(hours) +"h " + std::to_string(minutes) +"m "+ std::to_string(seconds) +"s").c_str() };
      }
      else if(id(${bms_name}_current_${bms_suffix}).state>0){
        int seconds = int((1.0-float(id(${bms_name}_capacity_remaining_${bms_suffix}).state)*0.01)*float(id(${bms_name}_total_battery_capacity_setting_${bms_suffix}).state)/float(id(${bms_name}_current_${bms_suffix}).state)*(3600));
        int days = seconds / (24 * 3600);
        seconds = seconds % (24 * 3600); 
        int hours = seconds / 3600;
        seconds = seconds % 3600;
        int minutes = seconds /  60;
        seconds = seconds % 60;
        return { ("Charging time to go: " + std::to_string(days) +"d " + std::to_string(hours) +"h " + std::to_string(minutes) +"m "+ std::to_string(seconds) +"s").c_str() };
      }
      else{
        return {""};
      }
    icon: mdi:clock-start
    update_interval: ${bms_text_update}  

  - platform: jk_bms
    jk_bms_id: ${bms_name}_bms_${bms_suffix}
    errors:
      name: ${name}_${bms_name}_errors_${bms_suffix})
    operation_mode:
      name: ${name}_${bms_name}_operation_mode_${bms_suffix})
    # battery_type:
      # name: ${name}_${bms_name}_battery_type_${bms_suffix})
    # password:
      # name: ${name}_${bms_name}_password_${bms_suffix})
    # device_type:
      # name: ${name}_${bms_name}_device_type_${bms_suffix})
    # software_version:
      # name: ${name}_${bms_name}_software_version_${bms_suffix})
    # manufacturer:
      # name: ${name}_${bms_name}_manufacturer_${bms_suffix})
