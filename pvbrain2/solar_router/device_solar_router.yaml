external_components:
  - source: "github://SeByDocKy/myESPhome/"
    components: [solarpid]
    refresh: 0s  
    
number:
    
  - platform: template
    name: ${name}_${solar_router_name}_setpoint
    id: ${solar_router_name}_setpoint
    optimistic: true
    unit_of_measurement: 'A'
    icon: mdi:current-dc
    min_value: -80
    max_value: 80
    step: 0.1
    mode: 'slider'
    initial_value: 0
    restore_value: true
    on_value:
       then:
         - solarpid.set_point: 
            id: ${solar_router_id}
            new_setpoint: !lambda |-
              return (float(id(${solar_router_name}_setpoint).state));
           
  - platform: template
    name: ${name}_${solar_router_name}_setkp
    id: ${solar_router_name}_setkp
    optimistic: true
    min_value: 0.0
    max_value: 10.0
    step: 0.1
    mode: 'slider'
    initial_value: 3.0
    restore_value: true
    on_value:
       then:
         - solarpid.set_kp: 
            id: ${solar_router_id}
            new_kp: !lambda |-
              return (float(id(${solar_router_name}_setkp).state));
           
  - platform: template
    name: ${name}_${solar_router_name}_setki
    id: ${solar_router_name}_setki
    optimistic: true
    min_value: 0.0
    max_value: 0.5
    step: 0.01
    mode: 'slider'
    initial_value: 0.0
    restore_value: true
    on_value:
       then:
         - solarpid.set_ki: 
            id: ${solar_router_id}
            new_ki: !lambda |-
              return (float(id(${solar_router_name}_setki).state));
         
  - platform: template
    name: ${name}_${solar_router_name}_setkd 
    id: ${solar_router_name}_setkd
    optimistic: true
    min_value: 0.0
    max_value: 1.0
    step: 0.01
    mode: 'slider'
    initial_value: 0.0
    restore_value: true
    on_value:
       then:
         - solarpid.set_kd: 
            id: ${solar_router_id}
            new_kd: !lambda |-
              return (float(id(${solar_router_name}_setkd).state));                                   
  
  - platform: template
    name: ${name}_${solar_router_name}_setoutputmin 
    id: ${solar_router_name}_setoutputmin
    optimistic: true
    min_value: 0.0
    max_value: 1.0
    step: 0.01
    mode: 'slider'
    initial_value: 0.13
    restore_value: true
    on_value:
       then:
         - solarpid.set_output_min: 
            id: ${solar_router_id}
            new_output_min: !lambda |-
              return (float(id(${solar_router_name}_setoutputmin).state));                                   
       
  - platform: template
    name: ${name}_${solar_router_name}_setoutputmax 
    id: ${solar_router_name}_setoutputmax
    optimistic: true
    min_value: 0.0
    max_value: 1.0
    step: 0.01
    mode: 'slider'
    initial_value: 0.85
    restore_value: true
    on_value:
       then:
         - solarpid.set_output_max: 
            id: ${solar_router_id}
            new_output_max: !lambda |-
              return (float(id(${solar_router_name}_setoutputmax).state));  

  - platform: template
    name: ${name}_${solar_router_name}_setstartingbatteryvoltage 
    id: ${solar_router_name}_setstartingbatteryvoltage
    optimistic: true
    unit_of_measurement: 'V'
    icon: mdi:sine-wave
    min_value: 50.0
    max_value: 56.0
    step: 0.1
    mode: 'slider'
    initial_value: 54.0
    restore_value: true
    on_value:
       then:
         - solarpid.set_starting_battery_voltage: 
            id: ${solar_router_id}
            new_starting_battery_voltage: !lambda |-
              return (float(id(${solar_router_name}_setstartingbatteryvoltage).state));

  - platform: template
    name: ${name}_${solar_router_name}_setoutputrestart
    id: ${solar_router_name}_setoutputrestart
    optimistic: true
    min_value: 0.0
    max_value: 1.0
    step: 0.05
    mode: 'slider'
    initial_value: 0.40
    restore_value: true
    on_value:
       then:
         - solarpid.set_output_restart: 
            id: ${solar_router_id}
            new_output_restart: !lambda |-
              return (float(id(${solar_router_name}_setoutputrestart).state));                   
switch:
  - platform: template
    name: ${name}_${solar_router_name}_activation
    id: ${solar_router_name}_activation
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF
    
  - platform: template
    name: ${name}_${solar_router_name}_manual_override
    id: ${solar_router_name}_manual_override
    optimistic: true
    restore_mode: RESTORE_DEFAULT_OFF  
    
sensor:
         
  - platform: solarpid
    id: ${solar_router_id}
    activation_id: ${solar_router_name}_activation
    manual_override_id: ${solar_router_name}_manual_override
    input_id: ${solar_router_name}_input
    setpoint: 0
    kp: 10.0
    ki: 0.0
    kd: 0.0
    output_id: ${solar_router_output_id}
    output_min: 0.13
    output_max: 0.85
    power_id: ${solar_router_power_id}
    battery_voltage_id: ${solar_router_battery_voltage_id}
    # starting_battery_voltage: ${solar_router_starting_battery_voltage}
    error:
      name: ${name}_${solar_router_name}_error
      accuracy_decimals: 2
    output:
      name: ${name}_${solar_router_name}_output
      accuracy_decimals: 2    
    
  - platform: copy
    source_id: ${solar_router_input_id}
    id: ${solar_router_name}_input
    filters:
      - sliding_window_moving_average:
          window_size: ${solar_router_windows_size}
          send_every: 1 #${solar_router_windows_size}
    on_value:
      then:
        - solarpid.pid_update:
           id: ${solar_router_id} 
  
# binary_sensor:
  # - platform: solarpid
    # solarpid_id: ${solar_router_id}
    # thermostat_cut:
      # name: ${name}_${solar_router_name}_thermostat_cut
      # id: ${solar_router_name}_thermostat_cut
    