modbus:
 - id: ${inverter_name}_modbus_${inverter_suffix}
   uart_id: ${inverter_uart_id}
   #flow_control_pin: 4
   
modbus_controller:
 - id: ${inverter_name}_modbus_controller_${inverter_suffix}
   address: ${inverter_modbus_address}
   modbus_id: ${inverter_name}_modbus_${inverter_suffix}
   command_throttle: ${inverter_modbus_throttle}
   setup_priority: -10
   update_interval: ${inverter_update_interval}

binary_sensor:           
  - platform: modbus_controller            # 194 Grid Connected Status
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_connected_status_${inverter_suffix}
    id: ${inverter_name}_grid_connected_status_${inverter_suffix}
    register_type: holding
    address: 194
    
sensor:
  
      #### battery statistics ###
      
  - platform: modbus_controller            # 070 Battery Charge Day
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_charging_energy_today_${inverter_suffix}
    id: ${inverter_name}_battery_charging_energy_today_${inverter_suffix}
    register_type: holding
    address: 70
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1

  - platform: modbus_controller            # 071 Battery Discharge Day
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_discharging_energy_today_${inverter_suffix}
    id: ${inverter_name}_battery_discharging_energy_today_${inverter_suffix}
    register_type: holding
    address: 71
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1

  - platform: modbus_controller            # 072 Battery Charge Energy Total
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_charging_total_${inverter_suffix}
    id: ${inverter_name}_battery_charging_total_${inverter_suffix}
    register_type: holding
    address: 72
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_DWORD_R
    filters:
     - multiply: 0.1

  - platform: modbus_controller            # 074 Battery Discharge Energy Total
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_discharging_total_${inverter_suffix}
    id: ${inverter_name}_battery_discharging_total_${inverter_suffix}
    register_type: holding
    address: 74
    unit_of_measurement: 'kWh'
    accuracy_decimals: 0
    device_class: energy
    state_class: total_increasing
    value_type: U_DWORD_R
    filters:
     - multiply: 0.1
     
    ########### Battery  #############
    
  - platform: modbus_controller            # 182 Battery Temperature
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_temperature_${inverter_suffix}
    id: ${inverter_name}_battery_temperature_${inverter_suffix}
    register_type: holding
    address: 182
    unit_of_measurement: 'Â°C'
    accuracy_decimals: 1
    device_class: temperature
    state_class: measurement
    value_type: U_WORD 
    filters:
      - offset: -1000
      - multiply: 0.1

  - platform: modbus_controller            # 183 Battery Voltage
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_voltage_${inverter_suffix}
    id: ${inverter_name}_battery_voltage_${inverter_suffix}
    register_type: holding
    address: 183
    unit_of_measurement: 'V'
    accuracy_decimals: 1
    device_class: voltage
    state_class: measurement
    filters:
      - multiply: 0.01
    value_type: U_WORD

  - platform: modbus_controller            # 184 Battery SOC
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_soc_${inverter_suffix}
    id: ${inverter_name}_battery_soc_${inverter_suffix}
    register_type: holding
    address: 184
    unit_of_measurement: '%'
    accuracy_decimals: 0
    device_class: battery
    value_type: U_WORD
    
  - platform: modbus_controller            # 190 Battery Output Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_output_power_${inverter_suffix}
    id: ${inverter_name}_sunsynk_esphome_battery_output_power_${inverter_suffix}
    register_type: holding
    address: 190
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    value_type: S_WORD

  - platform: modbus_controller            # 191 Battery Output Current
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_output_current_${inverter_suffix}
    id: ${inverter_name}_battery_output_current_${inverter_suffix}
    register_type: holding
    address: 191
    unit_of_measurement: 'A'
    accuracy_decimals: 1
    device_class: current
    state_class: measurement
    value_type: S_WORD
    filters:
      - multiply: 0.01
      
  - platform: modbus_controller            # 217 Battery Capacity Shutdown
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_capacity_shutdown_${inverter_suffix}
    id: ${inverter_name}_battery_capacity_shutdown_${inverter_suffix}
    register_type: holding
    address: 217
    unit_of_measurement: '%'
    accuracy_decimals: 0
    device_class: battery      
     

     ##### Grid data & statistics ####
     
  - platform: modbus_controller            # 076 Grid Import Day (Buy)
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_energy_imported_today_${inverter_suffix}
    id: ${inverter_name}_grid_energy_imported_today_${inverter_suffix}
    register_type: holding
    address: 76
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1
      
  - platform: modbus_controller            # 077 Day Grid Export
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_energy_exported_today_${inverter_suffix}
    id: ${inverter_name}_grid_energy_exported_today_${inverter_suffix}
    register_type: holding
    address: 77
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1    
     

  - platform: modbus_controller            # 078 Grid Import Energy Total (Buy)
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_energy_imported_total_${inverter_suffix}
    id: ${inverter_name}_grid_energy_imported_total_${inverter_suffix}
    register_type: holding
    address: 78
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1

  - platform: modbus_controller            # 079 Grid Frequency
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_frequency_${inverter_suffix}
    id: ${inverter_name}_grid_frequency_${inverter_suffix}
    register_type: holding
    address: 79
    unit_of_measurement: 'Hz'
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
    state_class: measurement
    
  - platform: modbus_controller            # 154 Grid Inverter Voltage
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_voltage_${inverter_suffix}
    id: ${inverter_name}_grid_voltage_${inverter_suffix}
    register_type: holding
    address: 154
    unit_of_measurement: 'V'
    accuracy_decimals: 1
    device_class: voltage
    state_class: measurement
    filters:
      - multiply: 0.1
    value_type: U_WORD 
    
  - platform: modbus_controller             # 167 Grid Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_power_167_${inverter_suffix}
    id: ${inverter_name}_grid_power_167_${inverter_suffix}
    register_type: holding
    address: 167
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: S_WORD

  - platform: modbus_controller             # 169 Grid Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_power_${inverter_suffix}
    id: ${inverter_name}_grid_power_${inverter_suffix}
    register_type: holding
    address: 169
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: S_WORD
    
  - platform: modbus_controller            # 172 Grid External Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_external_power_${inverter_suffix}
    id: ${inverter_name}_grid_external_power_${inverter_suffix}
    register_type: holding
    address: 172
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: S_WORD
          
  - platform: modbus_controller        # 255 Grid Peak Shaving raw register value
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    id: ${inverter_name}_grid_peak_shaving_raw_${inverter_suffix}
    register_type: holding
    address: 280
    value_type: U_WORD
      

     
    
  - platform: modbus_controller            # 081 Grid Export Energy Total (Sell)
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_energy_exported_total_${inverter_suffix}
    id: ${inverter_name}_grid_energy_exported_total_${inverter_suffix}
    register_type: holding
    address: 81
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    value_type: U_WORD
    filters:
      - multiply: 0.1
      
    ####### House load data & statistics  #####  

  - platform: modbus_controller            # 084 Daily Load
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_load_energy_today_${inverter_suffix}
    id: ${inverter_name}_load_energy_today_${inverter_suffix}
    register_type: holding
    address: 84
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    filters:
      - multiply: 0.1
    value_type: U_WORD

  - platform: modbus_controller            # 085 Total Load Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_total_load_power_${inverter_suffix}
    id: ${inverter_name}_total_load_power_${inverter_suffix}
    register_type: holding
    address: 85
    unit_of_measurement: 'W'
    accuracy_decimals: 2
    device_class: energy
    state_class: total_increasing
    value_type: U_DWORD_R
    filters:
      - multiply: 0.1
      
    ###### inverter builtin temperature data ####
    
  - platform: modbus_controller            # 090 DC Transformer Temperature
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_dc_transformer_temperature_${inverter_suffix}
    id: ${inverter_name}_dc_transformer_temperature_${inverter_suffix}
    register_type: holding
    address: 090
    unit_of_measurement: 'Â°C'
    accuracy_decimals: 1
    device_class: temperature
    state_class: measurement
    value_type: S_WORD
    filters:
      - offset: -1000
      - multiply:  0.1

  - platform: modbus_controller            # 091 Radiator Temperature
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_dc_radiator_temperature_${inverter_suffix}
    id: ${inverter_name}_dc_radiator_temperature_${inverter_suffix}
    register_type: holding
    address: 091
    unit_of_measurement: 'Â°C'
    accuracy_decimals: 1
    device_class: temperature
    state_class: measurement
    value_type: S_WORD
    filters:
      - offset: -1000
      - multiply:  0.1
    
      ######## PV statistics   ##########
      
      
  - platform: modbus_controller            # 096 PV Energy Total Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv_energy_total_${inverter_suffix}
    id: ${inverter_name}_pv_energy_total_${inverter_suffix}
    register_type: holding
    address: 96
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    filters:
      - multiply: 0.1
    value_type: U_DWORD_R  

  - platform: modbus_controller            # 108 Day PV Energy
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv_energy_today_${inverter_suffix}
    id: ${inverter_name}_pv_energy_today_${inverter_suffix}
    register_type: holding
    address: 108
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    device_class: energy
    state_class: total_increasing
    filters:
      - multiply: 0.1
    value_type: U_WORD
        
    
    ######## PV data ######
    
  - platform: modbus_controller            # 109 PV1 Voltage
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv1_voltage_${inverter_suffix}
    id: ${inverter_name}_pv1_voltage_${inverter_suffix}
    register_type: holding
    address: 109
    unit_of_measurement: 'V'
    device_class: voltage
    state_class: measurement
    filters:
      - multiply: 0.1
    value_type: U_WORD

  - platform: modbus_controller            # 111 PV2 Voltage
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv2_voltage_${inverter_suffix}
    id: ${inverter_name}_pv2_voltage_${inverter_suffix}
    register_type: holding
    address: 111
    unit_of_measurement: 'V'
    filters:
      - multiply: 0.1
    device_class: voltage
    state_class: measurement
    value_type: U_WORD

  - platform: modbus_controller            # 110 PV1 Output Current
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv1_current_${inverter_suffix}
    id: ${inverter_name}_pv1_current_${inverter_suffix}
    register_type: holding
    address: 110
    unit_of_measurement: 'A'
    accuracy_decimals: 1
    device_class: current
    state_class: measurement
    filters:
      - multiply: 0.1
    value_type: U_WORD

  - platform: modbus_controller            # 112 PV2 Output Current
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv2_current_${inverter_suffix}
    id: ${inverter_name}_pv2_current_${inverter_suffix}
    register_type: holding
    address: 112
    unit_of_measurement: 'A'
    accuracy_decimals: 1
    device_class: current
    state_class: measurement
    filters:
      - multiply: 0.1
    value_type: U_WORD
    
  - platform: modbus_controller            # 186 PV1 Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv1_power_${inverter_suffix}
    id: ${inverter_name}_pv1_power_${inverter_suffix}
    register_type: holding
    address: 186
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: U_WORD
    
  - platform: modbus_controller            # 187 PV2 Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_pv2_power_${inverter_suffix}
    id: ${inverter_name}_pv2_power_${inverter_suffix}
    register_type: holding
    address: 187
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: U_WORD

  - platform: template                   # Sum of PV1 and PV2 to get total PV Power
    name: ${name}_${inverter_name}_total_solar_${inverter_suffix}
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    lambda: |-
      return (id(${inverter_name}_pv1_power_${inverter_suffix}).state + id(${inverter_name}_pv2_power_${inverter_suffix}).state);
    update_interval: ${inverter_template_update}
    
    
   ############### ACout & aux data & statistics  #####

  - platform: modbus_controller            # 164 Inverter Output Current
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_ac_output_current_${inverter_suffix}
    id: ${inverter_name}_ac_output_current_${inverter_suffix}
    register_type: holding
    address: 164
    unit_of_measurement: 'A'
    accuracy_decimals: 1
    device_class: current
    state_class: measurement
    value_type: S_WORD
    filters:
      - multiply: 0.01
      
  - platform: modbus_controller            # 166 Aux Output Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_aux_output_power_${inverter_suffix}
    id: ${inverter_name}_aux_output_power_${inverter_suffix}
    register_type: holding
    address: 166
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: S_WORD
   
  - platform: modbus_controller            # 175 Inverter Output Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_active_power_${inverter_suffix}
    id: ${inverter_name}_active_power_${inverter_suffix}
    register_type: holding
    address: 175
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    value_type: S_WORD

  - platform: modbus_controller            # 178 Load Power
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_load_power_${inverter_suffix}
    id: ${inverter_name}_load_power_${inverter_suffix}
    register_type: holding
    address: 178
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    value_type: S_WORD
    
  - platform: modbus_controller            # 192 Load Frequency
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_load_frequency_${inverter_suffix}
    id: ${inverter_name}_load_frequency_${inverter_suffix}
    register_type: holding
    address: 192
    unit_of_measurement: 'Hz'
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    value_type: U_WORD
    state_class: measurement
    
  - platform: template                   # Essential Power based on register 175 + 167 -166
    name: ${name}_${inverter_name}_essential_power_${inverter_suffix}
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    lambda: |-
      return (id(${inverter_name}_active_power_${inverter_suffix}).state + id(${inverter_name}_grid_power_167_${inverter_suffix}).state - id(${inverter_name}_aux_output_power_${inverter_suffix}).state);
    update_interval: ${inverter_template_update}

  - platform: template                   # Essential Power based on register 175 + 169 -166
    name: ${name}_${inverter_name}_essential_power_1_${inverter_suffix}
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    lambda: |-
      return (id(${inverter_name}_active_power_${inverter_suffix}).state + id(${inverter_name}_grid_power_${inverter_suffix}).state - id(${inverter_name}_aux_output_power_${inverter_suffix}).state);
    update_interval: ${inverter_template_update}

  - platform: template                   # Nonessential Power 175 - 167
    name: ${name}_${inverter_name}_nonessential_power_${inverter_suffix}
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    lambda: |-
      return (id(${inverter_name}_grid_external_power_${inverter_suffix}).state - id(${inverter_name}_grid_power_167_${inverter_suffix}).state);
    update_interval: ${inverter_template_update}

  - platform: template                   # Nonessential Power 175 - 169
    name: ${name}_${inverter_name}_nonessential_power_1_${inverter_suffix}
    unit_of_measurement: 'W'
    accuracy_decimals: 0
    device_class: power
    state_class: measurement
    lambda: |-
      return (id(${inverter_name}_grid_external_power_${inverter_suffix}).state - id(${inverter_name}_grid_power_${inverter_suffix}).state);
    update_interval: ${inverter_template_update}
    
    

    
    
    
switch:
  - platform: modbus_controller          # 247 Toggle Solar Sell
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_toggle_solar_sell_${inverter_suffix}
    id: ${inverter_name}_toggle_solar_sell_${inverter_suffix}
    register_type: holding
    address: 247
    bitmask: 1
    entity_category: config
    icon: "mdi:toggle-switch"
  
  - platform: modbus_controller          # 243 Priority Load
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_toggle_priority_load_${inverter_suffix}
    id: ${inverter_name}_toggle_priority_load_${inverter_suffix}
    register_type: holding
    address: 243
    bitmask: 1
    icon: "mdi:toggle-switch"
  
  - platform: modbus_controller          # 326 Toggle Force Generator
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_toggle_force_generator_${inverter_suffix}
    id: ${inverter_name}_toggle_force_generator_${inverter_suffix}
    register_type: holding
    address: 326
    bitmask: 8192 # 2^13 to target bit 13
    icon: "mdi:toggle-switch"  

    
number:

  - platform: modbus_controller         # 230 Grid Charge Battery current
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_charge_battery_current_${inverter_suffix}
    id: ${inverter_name}_grid_charge_battery_current_${inverter_suffix}
    unit_of_measurement: 'A'
    address: 230
    min_value: 0
    max_value: 185
    step: 5
    value_type: U_WORD  

  - platform: modbus_controller         # 210 Battery Max Charge current
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_max_charge_current_${inverter_suffix}
    id: ${inverter_name}_battery_max_charge_current_${inverter_suffix}
    unit_of_measurement: 'A'
    address: 210
    min_value: 5
    max_value: 185
    step: 5
    value_type: U_WORD  

  - platform: modbus_controller         # 211 Battery Max Discharge current
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_battery_max_discharge_current_${inverter_suffix}
    id: ${inverter_name}_battery_max_discharge_current_${inverter_suffix}
    unit_of_measurement: 'A'
    address: 211
    min_value: 0
    max_value: 185
    step: 5
    value_type: U_WORD  

  - platform: modbus_controller            # 293 Grid Peak Shaving Power
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_peak_shaving_power_${inverter_suffix}
    id: ${inverter_name}_grid_peak_shaving_power_${inverter_suffix}
    address: 293
    unit_of_measurement: 'W'
    min_value: 0
    max_value: 8000
    step: 500
    value_type: U_WORD

  - platform: modbus_controller            # 245 Max Sell Power
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_max_sell_power_${inverter_suffix}
    id: ${inverter_name}_max_sell_power_${inverter_suffix}
    address: 245
    unit_of_measurement: 'W'
    min_value: 0
    max_value: 8000
    step: 500
    value_type: U_WORD

select:
  - platform: modbus_controller                   #243 Select Energy Patern
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_energy_pattern_${inverter_suffix}
    id: ${inverter_name}_energy_pattern_${inverter_suffix}
    address: 243
    value_type: U_WORD
    optionsmap:
      "Battery first": 0
      "Load first": 1   
         
  - platform: modbus_controller                   #244 Select Work Mode
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_work_mode_${inverter_suffix}
    id: ${inverter_name}_work_mode_${inverter_suffix}
    address: 244
    value_type: U_WORD
    optionsmap:
      "Selling First": 0
      "Zero Export + Limit to Load Only": 1
      "Limited to Home": 2    

  - platform: modbus_controller                  #280 Select Grid Peak Shaving
    use_write_multiple: true
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_grid_peak_shaving_${inverter_suffix}
    id: ${inverter_name}_grid_peak_shaving_${inverter_suffix}
    address: 280
    value_type: U_WORD
    optionsmap:
      "Disabled": 0
      "Enabled": 256
    lambda: |-
      // we are only interested in the 8th bit binary 0001 0000 0000 need to map the options 0, 256 in select 
      //ESP_LOGE("main","Modbus Number incoming value = %d",x);
      //ESP_LOGE("main","Modbus eval value = %d",(x & 0x0100));
      if ((x & 0x0100) == 0)
        return  std::string("Disabled");
      if ((x & 0x0100) == 256)
        return  std::string("Enabled");
      return {};
    write_lambda: |-
      //ESP_LOGE("main","Modbus write gets = %d",value);
      uint16_t unmodified =  id(${inverter_name}_grid_peak_shaving_raw_${inverter_suffix}).state;
      //ESP_LOGE("main","Modbus write unmodified = %d", unmodified);
      // optionsmap should only return 2 values... 0 , 256 so bitmask with complement 0x0100 to ensure we keep the original values in register. Then appply OR with the value that was chosen
      uint16_t modified = ((unmodified & ~0x0100) | value);
      //ESP_LOGE("main","Modbus write to write = %d", modified);
      return modified;    

text_sensor:
  - platform: modbus_controller            # 059 Overall State
    modbus_controller_id: ${inverter_name}_modbus_controller_${inverter_suffix}
    name: ${name}_${inverter_name}_overall_state_${inverter_suffix}
    id: ${inverter_name}_overall_state_${inverter_suffix}
    register_type: holding
    raw_encode: HEXBYTES
    address: 59
    lambda: |- 
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0: return std::string("standby");
        case 1: return std::string("selftest");
        case 2: return std::string("normal");
        case 3: return std::string("alarm");
        case 4: return std::string("fault");
        default: return std::string("unknown");
      }      
      
    
    