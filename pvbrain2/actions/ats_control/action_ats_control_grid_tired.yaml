sensor:
  - platform: copy
    source_id: ${ats_control_voltage_id}
    id: ${ats_control_name}_${ats_control_suffix}
    on_value:
       - if:  ##### if battery voltage < low battery threshold    ######
          condition:
            and:
              - switch.is_on: ${ats_control_id}
              - lambda: |-
                 return ( ( float(id(${ats_control_voltage_id}).state) < float(id(${ats_control_solar_to_grid_voltage_threshold_id}).state) )     );            
          then:
            - script.execute: script_mode_EDF
 
       - if:  ##### if battery voltage > high battery threshold    ######
          condition:
            and: 
              - switch.is_on: ${ats_control_id}
              - lambda: |-
                  return ( ( float(id(${ats_control_voltage_id}).state) > float(id(${ats_control_grid_to_solar_voltage_threshold_id}).state) )     );            
          then:
            - script.execute: script_mode_batterie

  # - platform: copy
  #   source_id: ${ats_control_voltage_id}
  #   id: ${ats_control_name}_${ats_control_suffix}
  #   on_value:
  #      - if:  ##### si tension cellule mini batterie < seuil bas    ######
  #           condition:
  #             and:
  #               - switch.is_on: ${ats_control_id}
  #           then:
  #            - if:
  #                 condition:
  #                     or:    
  #                      - lambda: return id(${ats_control_voltage_min_cell_1_id}).state < id(ats_voltage_min_cell_solar_to_grid_number_1).state;
  #                      - lambda: return id(${ats_control_voltage_min_cell_2_id}).state < id(ats_voltage_min_cell_solar_to_grid_number_1).state;
  #                 then:
  #                   - script.execute: script_mode_EDF
 
  #      - if:  ##### si tension cellule mini batterie < seuil bas    ######
  #           condition:
  #             and:
  #               - switch.is_on: ${ats_control_id}
  #           then:
  #            - if:
  #                 condition:
  #                     or:    
  #                      - lambda: return id(${ats_control_voltage_min_cell_1_id}).state > id(ats_voltage_min_cell_grid_to_solar_number_1).state;
  #                      - lambda: return id(${ats_control_voltage_min_cell_2_id}).state > id(ats_voltage_min_cell_grid_to_solar_number_1).state;
  #                 then:          
  #                   - script.execute: script_mode_batterie
            
script:
  - id: script_mode_EDF
    then:
      - switch.turn_off: ${ats_control_id}             
      - delay: 10s             
      - switch.turn_off: ${ats_control_relay_inverter_id} 
      - delay: 10s
      - select.set: 
            id: ${ats_control_inverteur_mode}
            option: "Solar Utility Battery"
            
  - id: script_mode_batterie
    then:       
            - select.set:
                id: ${ats_control_inverteur_mode} 
                option: "Solar Battery Utility"
            - delay: 10s
            - switch.turn_on: ${ats_control_relay_inverter_id} 
            - switch.turn_on: ${ats_control_id}        
