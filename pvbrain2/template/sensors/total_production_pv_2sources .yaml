
globals:  
  - id: ${total_production_pv_name}_energy_total_yesterday_global
    type: float
    restore_value: yes

time:
  - platform: homeassistant #sntp
    id: !extend my_time
  
    on_time:
      - seconds: 59
        minutes: 59
        hours: 23
        then:           
          - globals.set:
              id: ${total_production_pv_name}_energy_total_yesterday_global
              value: !lambda return ( id(${total_production_pv_name}_energy_total_yesterday_global) =  float( id(${total_production_pv_name}_energy_total_today).state) );                    
    
sensor:
  - platform: template
    id: ${total_production_pv_name}_power_total
    name: ${name}_${total_production_pv_name}_power
    accuracy_decimals: 1
    icon: mdi:power
    unit_of_measurement: 'W'
    update_interval: ${total_production_pv_template_update}
    lambda: |-
      return (id(${total_production_pv_source1}).state + id(${total_production_pv_source2}).state );
      
  - platform: total_daily_energy
    name: ${name}_${total_production_pv_name}_energy_total_today
    id: ${total_production_pv_name}_energy_total_today
    power_id: ${total_production_pv_name}_power_total
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    method: trapezoid
    filters:
       # Multiplication factor from W to kW is 0.001
       - multiply: 0.001
    icon: mdi:counter
  
  - platform: template
    name: ${name}_${total_production_pv_name}_energy_total_yesterday
    id: ${total_production_pv_name}_energy_total_yesterday
    unit_of_measurement: 'kWh'
    accuracy_decimals: 1
    icon: mdi:power
    update_interval: ${total_production_pv_template_update}
    lambda: |-
      return ( id(${total_production_pv_name}_energy_total_yesterday).state = id(${total_production_pv_name}_energy_total_yesterday_global) );  
      